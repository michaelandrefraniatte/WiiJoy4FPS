Supported devices :
- Joycon Left
- Joycon Right
- Wiimote
- Nunchuck
- Laser/Cam
- Keyboard
- Mouse

Script requirements :
- one empty line between mouse script and keyboard script, two empty lines at the end,
- no empty lines otherwise,
- only C# accepted, 
- the line with Main function shall not change and the lines with value changed arrays change with number in arrays only,
- name of script must be the same as program, i.e. WiiJoy4 or whatever the name,
- name of a picture must be on first line to load it, if exist, as the background picture of program,
- the 2 lines before mouse control codes and the 2 lines before keyboard control codes shall be let, only picture name can change, 
- can't use : //, but can use : /* */

Using programs :
- Add the name of your game at the end of program, i.e. after the 4 or whatever the name.
- Start the program, press decimal key when background is white, background of program becomes grey, inputs are enable, script is created.
- Press decimal key to disable inputs, background of program is white, open script to change it like changing mouse id and keyboard id, retrieved with my InterceptionTest.exe.
- Press decimal key to enable inputs again, background of program is black, errors are checked and open a message box indicating if it's a mouse control code or a keyboard control code error.
- Press decimal key to enable inputs, after modify and save script until there isn't any error.
- Press decimal key to disable inputs, background of program is white, close the program.

Tips and tricks :
- It needs bluetooth device or bluetooth built in.
- It needs an old Wiimote of the Wii console with USB sensor bar like the one for the Wii U console.
- It needs 2 LR6 batteries with a NiMH charger for have Wiimote charged.
- It needs official Joycons of the Switch console, with a Joycons Grip and a USB-C battery charger.
- Wiimote leds are blinking naturally showing batteries left, and for 2-3 new charges (7 hours for 1 charge), it's time to charge Joycons (20 hours for 1 charge), taking only 3 hours to total charge for all.
- The sensor bar is placed under a HDMI TV without something under, both connected to a PC.
- Joycons can be used in the Joycons Grip with the bluetooth connection.
- Before starting program or clicking Connect button, it needs to press sync button(s) of Joycon(s) (and/or Wiimote), it automatically pairs Joycon(s) (and/or Wiimote).
- The sync button of Wiimote is buttons 1 and 2 at same time, the sync button of Joycon is on one side needing to press more than 2 seconds.
- To remove latency of Joycon left when using both Joycons, pressing sync button of Joycon right before pressing sync button of Joycon left is required.
- If connecting Wiimote and Joycon(s) together, it needs to press sync button of Wiimote several times until ready, or to press red sync button at the rear of Wiimote.
- Joycons and Wiimote shall no moving just after connection of it, and before ready.
- Each time the inputs are enable with decimal key, it calibrates gyroscope, accelerometer and laser/cam from the current positions.
- Joycon Right Home and Joycon Left Capture buttons are used to recenter gyroscopes of Joycons.
- Pressing Numpad0 key open/close the display of emulated device values. 
- The picture of laser dot detected by webcam is shown as a transparent picture with two XY red lines, the intersection of lines is the laser dot. 
- For using laser/webcam, it's better to use laser beam as a red led putting inside a piece of transparent adhesive, or simply a red led.
- It needs to install Interception and use right keyboard id and mouse id retrieved with my InterceptionTest.exe.
- Playing in a dark room without sun light is required.
- Changing mouse sensitivity in game options is required.
- Setting game resolution the same as screen resolution of desktop is required.
- It's better to change keys with game options if possible, for having easy to remember which keys to push, with the ingame helps.
- Alt + Tab is used to navigate between windows, Alt + F4 is used to close a window, Alt + Enter is used to fullscreen a game window.

All entries :
- double mWSNunchuckStateRawJoystickX,
- double mWSNunchuckStateRawJoystickY, 
- double mWSNunchuckStateRawValuesX, 
- double mWSNunchuckStateRawValuesY, 
- double mWSNunchuckStateRawValuesZ, 
- bool mWSNunchuckStateC, 
- bool mWSNunchuckStateZ,
- double mWSButtonStateIRX, 
- double mWSButtonStateIRY, 
- bool mWSButtonStateA, 
- bool mWSButtonStateB, 
- bool mWSButtonStateMinus, 
- bool mWSButtonStateHome, 
- bool mWSButtonStatePlus, 
- bool mWSButtonStateOne, 
- bool mWSButtonStateTwo, 
- bool mWSButtonStateUp, 
- bool mWSButtonStateDown, 
- bool mWSButtonStateLeft, 
- bool mWSButtonStateRight, 
- double mWSRawValuesX, 
- double mWSRawValuesY, 
- double mWSRawValuesZ, 
- float EulerAnglesX, 
- float EulerAnglesY, 
- float EulerAnglesZ, 
- float DirectAnglesX, 
- float DirectAnglesY, 
- float DirectAnglesZ, 
- double camx, 
- double camy, 
- float EulerAnglesLeftX, 
- float EulerAnglesLeftY, 
- float EulerAnglesLeftZ, 
- float DirectAnglesLeftX, 
- float DirectAnglesLeftY, 
- float DirectAnglesLeftZ, 
- float EulerAnglesRightX, 
- float EulerAnglesRightY, 
- float EulerAnglesRightZ, 
- float DirectAnglesRightX, 
- float DirectAnglesRightY, 
- float DirectAnglesRightZ, 
- bool LeftButtonSHOULDER_1, 
- bool LeftButtonMINUS, 
- bool LeftButtonCAPTURE, 
- bool LeftButtonDPAD_UP, 
- bool LeftButtonDPAD_LEFT, 
- bool LeftButtonDPAD_DOWN, 
- bool LeftButtonDPAD_RIGHT, 
- bool LeftButtonSTICK, 
- bool RightButtonDPAD_DOWN, 
- bool LeftButtonSL, 
- bool LeftButtonSR, 
- double GetStickLeftX, 
- double GetStickLeftY, 
- bool RightButtonPLUS, 
- bool RightButtonDPAD_RIGHT, 
- bool RightButtonHOME, 
- bool RightButtonSHOULDER_1, 
- bool RightButtonDPAD_LEFT, 
- bool RightButtonDPAD_UP, 
- bool RightButtonSTICK, 
- bool RightButtonSL, 
- bool RightButtonSR, 
- bool RightButtonSHOULDER_2, 
- bool LeftButtonSHOULDER_2, 
- double GetStickRightX, 
- double GetStickRightY, 
- float GetAccelX, 
- float GetAccelY, 
- float GetAccelZ, 
- float GetAccelRightX, 
- float GetAccelRightY, 
- float GetAccelRightZ, 
- float GetAccelLeftX, 
- float GetAccelLeftY, 
- float GetAccelLeftZ, 
- int MouseHookX,
- int MouseHookY, 
- int MouseHookWheel, 
- bool MouseHookLeftButton, 
- bool MouseHookRightButton, 
- bool MouseHookDoubleClick, 
- bool MouseHookMiddleButton, 
- double watchM

Cursor examples :
- public double WidthS = System.Windows.Forms.Screen.PrimaryScreen.Bounds.Width / 2f;
- public double HeightS = System.Windows.Forms.Screen.PrimaryScreen.Bounds.Height / 2f;
- public double irx, iry;
- System.Windows.Forms.Cursor.Position = new System.Drawing.Point((int)(WidthS - irx * WidthS / 1024f), (int)(HeightS + iry * HeightS / 1024f));
- SetPhysicalCursorPos((int)(WidthS - irx * WidthS / 1024f), (int)(HeightS + iry * HeightS / 1024f));
- SetCaretPos((int)(WidthS - irx * WidthS / 1024f), (int)(HeightS + iry * HeightS / 1024f));
- SetCursorPos((int)(WidthS - irx * WidthS / 1024f), (int)(HeightS + iry * HeightS / 1024f));

Interception mouse/keyboard driver examples :
- public double mousex, mousey, mousexp, mouseyp, hardness = 540f;
- input.MoveMouseTo((int)(32767.5f - (mousex * hardness) / 100f - mousexp), (int)((mousey * hardness) / 100f + mouseyp + 32767.5f), 11);
- input.MoveMouseBy((int)(-mousex / 1.5f), (int)(mousey / 1.5f), 11);
- input.SendLeftClick(11); input.SendLeftClickF(11);
- input.SendRightClick(11); input.SendRightClickF(11);
- input.SendMiddleClick(11); input.SendMiddleClickF(11);
- input.SendWheelUp(11); input.SendWheelDown(11);
- input.SendKey((Keys)S_LeftShift, 1); input.SendKeyF((Keys)S_LeftShift, 1);
- input.SendKey(Keys.V, 1); input.SendKeyF(Keys.V, 1);

Sendinput examples :
- public double mousex, mousey, mousexp, mouseyp, hardness = 540f;
- MouseMW3((int)(32767.5f - (mousex * hardness) / 100f - mousexp), (int)((mousey * hardness) / 100f + mouseyp + 32767.5f));
- MouseBrink((int)(-mousex / 1.5f), (int)(mousey / 1.5f));
- LeftClick(); LeftClickF();
- RightClick(); RightClickF();
- MiddleClick(); MiddleClickF();
- WheelUpF(); WheelDownF();
- SimulateKeyDown(VK_LeftControl, S_LeftControl); SimulateKeyUp(VK_LeftControl, S_LeftControl);
- SimulateKeyDownArrows(VK_LEFT, S_LEFT); SimulateKeyUpArrows(VK_LEFT, S_LEFT);

Keyboard_event/Mouse_event examples :
- public double mousex, mousey, mousexp, mouseyp, hardness = 540f;
- MoveMouseTo((int)(32767.5f - (mousex * hardness) / 100f - mousexp), (int)((mousey * hardness) / 100f + mouseyp + 32767.5f));
- MoveMouseBy((int)(-mousex / 1.5f), (int)(mousey / 1.5f));
- SendMouseEventButtonLeft(); SendMouseEventButtonLeftF();
- SendMouseEventButtonRight(); SendMouseEventButtonRightF();
- SendMouseEventButtonMiddle(); SendMouseEventButtonMiddleF();
- SendMouseEventButtonWheelUp(); SendMouseEventButtonWheelDown();
- SendKey(VK_Return, S_Return); SendKeyF(VK_Return, S_Return);
- SendKeyArrows(VK_UP, S_UP); SendKeyArrowsF(VK_UP, S_UP);

Keyboard and mouse hooks :
- GetAsyncKeyState(System.Windows.Forms.Keys.A)
- GetCursorPos(out x, out y);

VK, bScan, Keys code examples :
- VK_LBUTTON, S_LBUTTON, (Keys)S_LBUTTON
- VK_RBUTTON, ...
- VK_CANCEL, ...
- VK_MBUTTON, ...
- VK_XBUTTON1, ...
- VK_XBUTTON2, ...
- VK_BACK, ...
- VK_Tab, ...
- VK_CLEAR, ...
- VK_Return, ...
- VK_SHIFT, ...
- VK_CONTROL, ...
- VK_MENU, ...
- VK_PAUSE, ...
- VK_CAPITAL, ...
- VK_KANA, ...
- VK_HANGEUL, ...
- VK_HANGUL, ...
- VK_JUNJA, ...
- VK_FINAL, ...
- VK_HANJA, ...
- VK_KANJI, ...
- VK_Escape, ...
- VK_CONVERT, ...
- VK_NONCONVERT, ...
- VK_ACCEPT, ...
- VK_MODECHANGE, ...
- VK_Space, ...
- VK_PRIOR, ...
- VK_NEXT, ...
- VK_END, ...
- VK_HOME, ...
- VK_LEFT, ...
- VK_UP, ...
- VK_RIGHT, ...
- VK_DOWN, ...
- VK_SELECT, ...
- VK_PRINT, ...
- VK_EXECUTE, ...
- VK_SNAPSHOT, ...
- VK_INSERT, ...
- VK_DELETE, ...
- VK_HELP, ...
- VK_APOSTROPHE, ...
- VK_0, ...
- VK_1, ...
- VK_2, ...
- VK_3, ...
- VK_4, ...
- VK_5, ...
- VK_6, ...
- VK_7, ...
- VK_8, ...
- VK_9, ...
- VK_A, ...
- VK_B, ...
- VK_C, ...
- VK_D, ...
- VK_E, ...
- VK_F, ...
- VK_G, ...
- VK_H, ...
- VK_I, ...
- VK_J, ...
- VK_K, ...
- VK_L, ...
- VK_M, ...
- VK_N, ...
- VK_O, ...
- VK_P, ...
- VK_Q, ...
- VK_R, ...
- VK_S, ...
- VK_T, ...
- VK_U, ...
- VK_V, ...
- VK_W, ...
- VK_X, ...
- VK_Y, ...
- VK_Z, ...
- VK_LWIN, ...
- VK_RWIN, ...
- VK_APPS, ...
- VK_SLEEP, ...
- VK_NUMPAD0, ...
- VK_NUMPAD1, ...
- VK_NUMPAD2, ...
- VK_NUMPAD3, ...
- VK_NUMPAD4, ...
- VK_NUMPAD5, ...
- VK_NUMPAD6, ...
- VK_NUMPAD7, ...
- VK_NUMPAD8, ...
- VK_NUMPAD9, ...
- VK_MULTIPLY, ...
- VK_ADD, ...
- VK_SEPARATOR, ...
- VK_SUBTRACT, ...
- VK_DECIMAL, ...
- VK_DIVIDE, ...
- VK_F1, ...
- VK_F2, ...
- VK_F3, ...
- VK_F4, ...
- VK_F5, ...
- VK_F6, ...
- VK_F7, ...
- VK_F8, ...
- VK_F9, ...
- VK_F10, ...
- VK_F11, ...
- VK_F12, ...
- VK_F13, ...
- VK_F14, ...
- VK_F15, ...
- VK_F16, ...
- VK_F17, ...
- VK_F18, ...
- VK_F19, ...
- VK_F20, ...
- VK_F21, ...
- VK_F22, ...
- VK_F23, ...
- VK_F24, ...
- VK_NUMLOCK, ...
- VK_SCROLL, ...
- VK_LeftShift, ...
- VK_RightShift, ...
- VK_LeftControl, ...
- VK_RightControl, ...
- VK_LMENU, ...
- VK_RMENU, ...
- VK_BROWSER_BACK, ...
- VK_BROWSER_FORWARD, ...
- VK_BROWSER_REFRESH, ...
- VK_BROWSER_STOP, ...
- VK_BROWSER_SEARCH, ...
- VK_BROWSER_FAVORITES, ...
- VK_BROWSER_HOME, ...
- VK_VOLUME_MUTE, ...
- VK_VOLUME_DOWN, ...
- VK_VOLUME_UP, ...
- VK_MEDIA_NEXT_TRACK, ...
- VK_MEDIA_PREV_TRACK, ...
- VK_MEDIA_STOP, ...
- VK_MEDIA_PLAY_PAUSE, ...
- VK_LAUNCH_MAIL, ...
- VK_LAUNCH_MEDIA_SELECT, ...
- VK_LAUNCH_APP1, ...
- VK_LAUNCH_APP2, ...
- VK_OEM_1, ...
- VK_OEM_PLUS, ...
- VK_OEM_COMMA, ...
- VK_OEM_MINUS, ...
- VK_OEM_PERIOD, ...
- VK_OEM_2, ...
- VK_OEM_3, ...
- VK_OEM_4, ...
- VK_OEM_5, ...
- VK_OEM_6, ...
- VK_OEM_7, ...
- VK_OEM_8, ...
- VK_OEM_102, ...
- VK_PROCESSKEY, ...
- VK_PACKET, ...
- VK_ATTN, ...
- VK_CRSEL, ...
- VK_EXSEL, ...
- VK_EREOF, ...
- VK_PLAY, ...
- VK_ZOOM, ...
- VK_NONAME, ...
- VK_PA1, ...
- VK_OEM_CLEAR, ...
